/* automatically generated by rust-bindgen 0.59.1 */
#![allow(
    non_camel_case_types,
    non_upper_case_globals,
    non_snake_case,
    trivial_casts,
    deref_nullptr
)]

use std::{
    ffi::c_void,
    os::raw::{c_char, c_uint},
};

// Bindgen autogenerated bindings
include!(concat!(env!("OUT_DIR"), "/bindings.rs"));

// Manual bindings

macro_rules! decl_opaque {
    ($($name:ident)+) => {
        $(
            #[repr(C)]
            pub struct $name {
                _opaque: [u8; 0],
            }
        )+
    };
}

decl_opaque! {
    sfClock
    sfStdString
}

extern "C" {
    pub fn sfClipboard_getUnicodeString() -> *const sfUint32;
    pub fn sfClipboard_setUnicodeString(text: *const sfUint32);

    pub fn sfClock_create() -> *mut sfClock;
    pub fn sfClock_copy(clock: *const sfClock) -> *mut sfClock;
    pub fn sfClock_destroy(clock: *mut sfClock);
    pub fn sfClock_getElapsedTime(clock: *const sfClock) -> sfTime;
    pub fn sfClock_restart(clock: *mut sfClock) -> sfTime;

    pub fn sfSleep(duration: sfTime);

    pub fn sfTexture_new() -> *mut sfTexture;
    pub fn sfTexture_create(tex: *mut sfTexture, width: c_uint, height: c_uint) -> sfBool;
    pub fn sfTexture_loadFromFile(
        tex: *mut sfTexture,
        filename: *const c_char,
        area: sfIntRect,
    ) -> sfBool;
    pub fn sfTexture_loadFromMemory(
        tex: *mut sfTexture,
        data: *const c_void,
        size: usize,
        area: sfIntRect,
    ) -> sfBool;
    pub fn sfTexture_loadFromStream(
        tex: *mut sfTexture,
        stream: *mut sfInputStream,
        area: sfIntRect,
    ) -> sfBool;
    pub fn sfTexture_loadFromImage(
        tex: *mut sfTexture,
        image: *const sfImage,
        area: sfIntRect,
    ) -> sfBool;
    pub fn sfSoundBufferRecorder_create() -> *mut sfSoundBufferRecorder;
    pub fn sfSoundBufferRecorder_destroy(bufRec: *mut sfSoundBufferRecorder);
    pub fn sfSoundBufferRecorder_start(
        bufRec: *mut sfSoundBufferRecorder,
        sampRate: c_uint,
    ) -> sfBool;
    pub fn sfSoundBufferRecorder_stop(bufRec: *mut sfSoundBufferRecorder);
    pub fn sfSoundBufferRecorder_getSampleRate(bufRec: *const sfSoundBufferRecorder) -> c_uint;
    pub fn sfSoundBufferRecorder_getBuffer(
        bufRec: *const sfSoundBufferRecorder,
    ) -> *const sfSoundBuffer;
    pub fn sfSoundBufferRecorder_setDevice(
        bufRec: *mut sfSoundBufferRecorder,
        name: *const c_char,
    ) -> sfBool;
    pub fn sfSoundBufferRecorder_getDevice(
        bufRec: *const sfSoundBufferRecorder,
    ) -> *const sfStdString;
    pub fn sfStdString_getLength(s: *const sfStdString) -> usize;
    pub fn sfStdString_getData(s: *const sfStdString) -> *const c_char;
}
